// Code generated by protoc-gen-go. DO NOT EDIT.
// source: smn_dict/smn_dict.proto

package smn_dict

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EDict int32

const (
	EDict_None                                 EDict = 0
	EDict_rip_ano_rpc_itf_Login_Test1_Prm      EDict = 1
	EDict_rip_ano_rpc_itf_Login_Test1_Ret      EDict = 2
	EDict_rip_ano_rpc_itf_Login_Test2_Prm      EDict = 3
	EDict_rip_ano_rpc_itf_Login_Test2_Ret      EDict = 4
	EDict_rip_ano_rpc_itf_MutiTest_SendMsg_Prm EDict = 5
	EDict_rip_ano_rpc_itf_MutiTest_SendMsg_Ret EDict = 6
	EDict_rip_ano_rpc_itf_Login_DoLogin_Prm    EDict = 7
	EDict_rip_ano_rpc_itf_Login_DoLogin_Ret    EDict = 8
	EDict_rip_rpc_itf_Login_Test2_Prm          EDict = 9
	EDict_rip_rpc_itf_Login_Test2_Ret          EDict = 10
	EDict_rip_rpc_itf_MutiTest_SendMsg_Prm     EDict = 11
	EDict_rip_rpc_itf_MutiTest_SendMsg_Ret     EDict = 12
	EDict_rip_rpc_itf_Login_DoLogin_Prm        EDict = 13
	EDict_rip_rpc_itf_Login_DoLogin_Ret        EDict = 14
	EDict_rip_rpc_itf_Login_Test1_Prm          EDict = 15
	EDict_rip_rpc_itf_Login_Test1_Ret          EDict = 16
	EDict_smn_base_FPkg                        EDict = 17
	EDict_smn_base_Call                        EDict = 18
	EDict_smn_base_Ret                         EDict = 19
)

var EDict_name = map[int32]string{
	0:  "None",
	1:  "rip_ano_rpc_itf_Login_Test1_Prm",
	2:  "rip_ano_rpc_itf_Login_Test1_Ret",
	3:  "rip_ano_rpc_itf_Login_Test2_Prm",
	4:  "rip_ano_rpc_itf_Login_Test2_Ret",
	5:  "rip_ano_rpc_itf_MutiTest_SendMsg_Prm",
	6:  "rip_ano_rpc_itf_MutiTest_SendMsg_Ret",
	7:  "rip_ano_rpc_itf_Login_DoLogin_Prm",
	8:  "rip_ano_rpc_itf_Login_DoLogin_Ret",
	9:  "rip_rpc_itf_Login_Test2_Prm",
	10: "rip_rpc_itf_Login_Test2_Ret",
	11: "rip_rpc_itf_MutiTest_SendMsg_Prm",
	12: "rip_rpc_itf_MutiTest_SendMsg_Ret",
	13: "rip_rpc_itf_Login_DoLogin_Prm",
	14: "rip_rpc_itf_Login_DoLogin_Ret",
	15: "rip_rpc_itf_Login_Test1_Prm",
	16: "rip_rpc_itf_Login_Test1_Ret",
	17: "smn_base_FPkg",
	18: "smn_base_Call",
	19: "smn_base_Ret",
}

var EDict_value = map[string]int32{
	"None":                                 0,
	"rip_ano_rpc_itf_Login_Test1_Prm":      1,
	"rip_ano_rpc_itf_Login_Test1_Ret":      2,
	"rip_ano_rpc_itf_Login_Test2_Prm":      3,
	"rip_ano_rpc_itf_Login_Test2_Ret":      4,
	"rip_ano_rpc_itf_MutiTest_SendMsg_Prm": 5,
	"rip_ano_rpc_itf_MutiTest_SendMsg_Ret": 6,
	"rip_ano_rpc_itf_Login_DoLogin_Prm":    7,
	"rip_ano_rpc_itf_Login_DoLogin_Ret":    8,
	"rip_rpc_itf_Login_Test2_Prm":          9,
	"rip_rpc_itf_Login_Test2_Ret":          10,
	"rip_rpc_itf_MutiTest_SendMsg_Prm":     11,
	"rip_rpc_itf_MutiTest_SendMsg_Ret":     12,
	"rip_rpc_itf_Login_DoLogin_Prm":        13,
	"rip_rpc_itf_Login_DoLogin_Ret":        14,
	"rip_rpc_itf_Login_Test1_Prm":          15,
	"rip_rpc_itf_Login_Test1_Ret":          16,
	"smn_base_FPkg":                        17,
	"smn_base_Call":                        18,
	"smn_base_Ret":                         19,
}

func (x EDict) String() string {
	return proto.EnumName(EDict_name, int32(x))
}

func (EDict) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_405b8146606135ca, []int{0}
}

func init() {
	proto.RegisterEnum("smn_dict.EDict", EDict_name, EDict_value)
}

func init() { proto.RegisterFile("smn_dict/smn_dict.proto", fileDescriptor_405b8146606135ca) }

var fileDescriptor_405b8146606135ca = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4e, 0x02, 0x31,
	0x10, 0x86, 0x15, 0x59, 0x5c, 0x47, 0xc0, 0x32, 0x1e, 0x3c, 0x18, 0x83, 0x44, 0x4c, 0x8c, 0x07,
	0x8d, 0xfa, 0x06, 0x88, 0x9e, 0xc4, 0x10, 0xf5, 0x3e, 0xd9, 0x5d, 0xea, 0xa6, 0x11, 0xda, 0xcd,
	0xb6, 0x3e, 0x8a, 0xef, 0x6b, 0x66, 0x09, 0x04, 0x15, 0x5a, 0x4f, 0xbb, 0x9d, 0x7c, 0xfd, 0xa6,
	0x7f, 0xf2, 0xc3, 0x91, 0x9d, 0x69, 0x9a, 0xa8, 0xcc, 0x5d, 0x2f, 0x7e, 0xae, 0x8a, 0xd2, 0x38,
	0x83, 0xf1, 0xe2, 0x7c, 0xf9, 0x15, 0x41, 0xf4, 0x30, 0x54, 0x99, 0xc3, 0x18, 0xea, 0xcf, 0x46,
	0x4b, 0xb1, 0x85, 0x67, 0xd0, 0x2d, 0x55, 0x41, 0x89, 0x36, 0x54, 0x16, 0x19, 0x29, 0xf7, 0x4e,
	0x4f, 0x26, 0x57, 0x9a, 0xde, 0xa4, 0x75, 0x37, 0x34, 0x2e, 0x67, 0x62, 0x3b, 0x04, 0xbd, 0x48,
	0x27, 0x6a, 0x7e, 0xe8, 0xb6, 0x32, 0xed, 0x84, 0x20, 0x36, 0xd5, 0xf1, 0x02, 0xfa, 0xbf, 0xa1,
	0xd1, 0xa7, 0x53, 0x8c, 0xd0, 0xab, 0xd4, 0x93, 0x91, 0xcd, 0x2b, 0x5d, 0xf4, 0x2f, 0x92, 0x9d,
	0x0d, 0x3c, 0x87, 0xde, 0xfa, 0xc5, 0x43, 0x33, 0xff, 0xb2, 0x70, 0x37, 0x8c, 0xb1, 0x2d, 0xc6,
	0x2e, 0x1c, 0x33, 0xb6, 0x29, 0xe7, 0x9e, 0x0f, 0x60, 0x03, 0x60, 0x1f, 0x4e, 0x57, 0x81, 0xb5,
	0xf9, 0xf6, 0x83, 0x14, 0xbb, 0x9a, 0xd8, 0x83, 0x93, 0xbf, 0xcb, 0x56, 0x73, 0xb5, 0xfc, 0x08,
	0x5b, 0xda, 0x9b, 0x9f, 0x3c, 0x6f, 0xc1, 0x81, 0x0f, 0x60, 0x83, 0xc0, 0x0e, 0xb4, 0xb8, 0x6b,
	0x69, 0x62, 0x25, 0x3d, 0x8e, 0x3f, 0x72, 0xd1, 0xf9, 0x31, 0xba, 0x4f, 0xa6, 0x53, 0x81, 0x28,
	0xa0, 0xb9, 0x1c, 0xf1, 0xbd, 0xc3, 0x41, 0x1b, 0x6a, 0x45, 0x3a, 0x58, 0xf6, 0x34, 0x6d, 0x54,
	0xc5, 0xbd, 0xfb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x17, 0xb2, 0x56, 0xd3, 0x02, 0x00, 0x00,
}
